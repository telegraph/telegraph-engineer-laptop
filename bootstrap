#!/bin/bash

START_TIME=$(date +"%T")

# Get the some path - used to include other files 
SCRIPT_PATH=`dirname "$(cd "${0%/*}" 2>/dev/null; echo "$PWD"/"${0##*/}")"`
CONFIG_PATH="$SCRIPT_PATH/config"
BREWFILE="$CONFIG_PATH/Brewfile"

# work out which version of mac os we are running
MAJOR_MAC_VERSION=$(sw_vers -productVersion | awk -F '.' '{print $1 "." $2}')

echo "Running on $MAJOR_MAC_VERSION"

# shellcheck disable=SC2154
# Print out the failure when exiting the script
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

# exit if there is an error
set -e


echo "
#########################################################################
Prompting for your password as it is needed to install the 
latest Max OS updates and to ensure permssions on homebrew are setup 
correctly.
#########################################################################
"
# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until the script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

########################[ INSTALL depending on OS ]############################
RUNNING_SYSTEM=`uname -s`

# We're on a Mac, let's install and setup using homebrew.
if [ "$RUNNING_SYSTEM" == "Darwin" ]; then

########################[ Updating Mac OS ]####################################
# Update mac software
	echo "######################## 0. Updating mac os ########################"
	sudo softwareupdate -i -a

########################[ Command line xcode ]#################################
	echo "################ 1. Install Apple command line tools ################"
	COMMANDLINE_TOOLS="/Library/Developer/CommandLineTools"
	if [ ! -d "$COMMANDLINE_TOOLS" ]; then
		xcode-select --install
		echo "Commandline tools not found where expected, trying anyway"
	fi

########################[ Check homebrew is installed ]########################
	echo "############### 2. Using homebrew to install software ###############"

	if test ! "$(command -v brew)"; then
		echo "Install Homebrew"
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	else
		if [[ -z "${CI}" ]]; then
			echo "Update Homebrew"
			brew update
			brew upgrade
			brew doctor
		fi
	fi

########################[ Install homebrew apps ]##############################

	echo "################### 3. Updating Homebrew formulae ###################"
	brew update --force 					 # https://github.com/Homebrew/brew/issues/1151
	echo "Updated forcefully"

	echo "Installing from brewfile"
  	brew bundle --file "$BREWFILE"

########################[ Run user customisations ]############################
# run anything from the user local file,
	if [ -f "$USER.local" ]; then
		# shellcheck disable=SC1090				# not sure if still needed
		sh "$USER.local"
	fi
else 
	echo "Unfortunately your system is not currently supported with this script"
fi

echo "Cleanup"
brew cleanup

END_TIME=$(date +"%T")

echo "Started at 	: $START_TIME"
echo "Ended at 	: $END_TIME"

echo "DONE!"
